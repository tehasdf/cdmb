tosca_definitions_version: cloudify_dsl_1_3

imports:
  - types.yaml
  - ../plugin.yaml
  - plugins/cdmb/plugin.yaml


node_templates:
  localhost:
    type: docker2.Docker

  external_network:
    type: docker2.Network
    properties:
      name: bridge
      external: true
    relationships:
      - type: docker2.using_docker_host
        target: localhost

  postgres_network:
    type: docker2.Network
    relationships:
      - type: docker2.using_docker_host
        target: localhost

  postgresql_image:
    type: docker2.Image
    properties:
      repository: postgres
      keep: true
    relationships:
      - type: docker2.using_docker_host
        target: localhost

  postgresql:
    type: docker2.Container
    properties:
      name: postgresql
      environment:
        POSTGRES_USER: cloudify
        POSTGRES_PASSWORD: cloudify
        POSTGRES_DB: cloudify_db
    relationships:
      - type: docker2.using_docker_host
        target: localhost
      - type: docker2.container_from_image
        target: postgresql_image
      - type: docker2.container_connected_to_network
        target: postgres_network

  rabbitmq_certs_volume:
    type: docker2.Volume
    properties:
      mount_at: /etc/rabbitmq-certs
    relationships:
      - type: docker2.using_docker_host
        target: localhost
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: cdmb.cdmb.tasks.prepare_rabbitmq_certs

  rest_resources_volume:
    type: docker2.Volume
    properties:
      mount_at: /opt/manager/resources
    relationships:
      - type: docker2.using_docker_host
        target: localhost

  rest_config_volume:
    type: cdmb.restservice_config
    relationships:
      - type: docker2.using_docker_host
        target: localhost
      - type: cdmb.config_to_rabbitmq
        target: rabbitmq
      - type: cdmb.config_to_postgres
        target: postgresql

  rest_image:
    type: docker2.Image
    properties:
      dockerfile: components/restservice/image
      image_name: cdmb/restservice
      keep: true
    relationships:
      - type: docker2.using_docker_host
        target: localhost

  restservice:
    type: docker2.Container
    properties:
      name: restservice
    relationships:
      - type: docker2.using_docker_host
        target: localhost
      - type: docker2.container_from_image
        target: rest_image
      - type: cdmb.restservice_to_postgres
        target: postgres_network
      - type: docker2.container_connected_to_volume
        target: rest_config_volume
      - type: docker2.container_connected_to_network
        target: rabbitmq_network
      - type: docker2.container_connected_to_network
        target: nginx_network
      - type: docker2.container_connected_to_volume
        target: rest_resources_volume
      - type: docker2.container_connected_to_volume
        target: rabbitmq_certs_volume

  rabbitmq_network:
    type: docker2.Network
    relationships:
      - type: docker2.using_docker_host
        target: localhost

  rabbitmq_image:
    type: docker2.Image
    properties:
      dockerfile: components/rabbitmq/image
      image_name: cdmb/rabbitmq
      keep: true
    relationships:
      - type: docker2.using_docker_host
        target: localhost

  rabbitmq:
    type: docker2.Container
    properties:
      name: rabbitmq
    relationships:
      - type: docker2.using_docker_host
        target: localhost
      - type: docker2.container_from_image
        target: rabbitmq_image
      - type: docker2.container_connected_to_network
        target: rabbitmq_network
      - type: docker2.container_connected_to_volume
        target: rabbitmq_certs_volume

  mgmtworker_config_volume:
    type: cdmb.mgmtworker_config
    relationships:
      - type: docker2.using_docker_host
        target: localhost
      - type: cdmb.config_to_rabbitmq
        target: rabbitmq
      - type: cdmb.nginx_config_to_restservice
        target: nginx

  mgmtworker_image:
    type: docker2.Image
    properties:
      dockerfile: components/mgmtworker/image
      image_name: cdmb/mgmtworker
      keep: true
    relationships:
      - type: docker2.using_docker_host
        target: localhost

  mgmtworker:
    type: docker2.Container
    properties:
      name: mgmtworker
    relationships:
      - type: docker2.using_docker_host
        target: localhost
      - type: docker2.container_connected_to_volume
        target: mgmtworker_config_volume
      - type: docker2.container_from_image
        target: mgmtworker_image
      - type: docker2.container_connected_to_network
        target: rabbitmq_network
      - type: docker2.container_connected_to_volume
        target: rabbitmq_certs_volume
      - type: docker2.container_connected_to_network
        target: nginx_network
      - type: docker2.container_connected_to_volume
        target: nginx_certs_volume

  nginx_certs_volume:
    type: docker2.Volume
    properties:
      mount_at: /etc/nginx-certs
    relationships:
      - type: docker2.using_docker_host
        target: localhost
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: cdmb.cdmb.tasks.prepare_nginx_certs

  nginx_network:
    type: docker2.Network
    relationships:
      - type: docker2.using_docker_host
        target: localhost

  nginx_config_volume:
    type: cdmb.nginx_config
    relationships:
      - type: docker2.using_docker_host
        target: localhost
      - type: cdmb.nginx_config_to_restservice
        target: restservice

  nginx_image:
    type: docker2.Image
    properties:
      repository: nginx
      keep: true
    relationships:
      - type: docker2.using_docker_host
        target: localhost

  nginx:
    type: docker2.Container
    properties:
      name: nginx
      network_aliases:
        nginx_network: [nginx]
    relationships:
      - type: docker2.using_docker_host
        target: localhost
      - type: docker2.container_from_image
        target: nginx_image
      - type: docker2.container_connected_to_volume
        target: nginx_config_volume
      - type: docker2.container_connected_to_network
        target: nginx_network
      - type: docker2.container_connected_to_volume
        target: nginx_certs_volume

  provider_context:
    type: cdmb.provider_context
    relationships:
      - type: docker2.using_docker_host
        target: localhost
      - type: cdmb.api_using_external_network
        target: external_network
      - type: cdmb.provider_context_to_api
        target: nginx


outputs:
  manager_ip:
    value: { get_attribute: [provider_context, api_addr] }
